'use client'

import { updateUserInfo } from '@/app/actions'
import { Container, Title } from '@/shared/components'
import { FormInput, FormTextarea } from '@/shared/components/form'
import type { TFormProfileUpdateValues } from '@/shared/components/modals/auth-modal/forms/schemas'
import {
	SettingsPageProfileCustomFieldsItem
} from '@/shared/components/profiles/settings/settings-page-items/settings-page-profile-custom-fields-item'
import { Button } from '@/shared/components/ui/button'
import { useProfileCustomFields, useProfileCustomFieldsForm } from '@/shared/hooks'
import { User } from '@prisma/client'
import React, { useEffect } from 'react'
import { FormProvider } from 'react-hook-form'
import toast from 'react-hot-toast'

interface Props {
	data: User;
}

export const SettingsProfilePageGroup: React.FC<Props> = ({ data }) => {
	const { profile, loading, updateCustomField } = useProfileCustomFields(data.id)
	const form = useProfileCustomFieldsForm(data, profile) // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
	
	const { setValue, handleSubmit, formState } = form
	
	useEffect(() => {
		if (profile) {
			setValue('fullName', profile.fullName)
			setValue('bio', profile.bio ?? '')
			setValue('customFields', profile.customFields)
		}
	}, [profile, setValue])
	
	const onSubmit = async (formData: TFormProfileUpdateValues) => {
		if (!profile) return
		
		try {
			await updateUserInfo({
				where: { id: profile.id },
				data: {
					fullName: formData.fullName,
					bio: formData.bio,
					customFields: formData.customFields // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã
				}
			})
			
			toast.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã üìù', {
				icon: '‚úÖ'
			})
		} catch (error) {
			toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö', {
				icon: '‚ùå'
			})
		}
	}
	
	return (
		<Container className='bg-secondary rounded-md mt-1 p-4'>
			<p>
				–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ, —á—Ç–æ –ª—é–¥–∏ –≤–∏–¥—è—Ç –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ. –î—Ä—É–≥–∏–µ –ª—é–¥–∏ —Å –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø–æ–¥–ø–∏—à—É—Ç—Å—è –Ω–∞ –í–∞—Å –∏ –±—É–¥—É—Ç
				–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –≤–∞–º–∏, –µ—Å–ª–∏ —É –í–∞—Å –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
			</p>
			<div className='w-full border-b-2 border-b-blue-600 pb-4'>
				<Title text='–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' size='sm' className='mt-2' />
			</div>
			<FormProvider {...form}>
				<form className='mt-4' onSubmit={handleSubmit(onSubmit)}>
					<div className='flex gap-4 w-full'>
						<div className='w-1/2'>
							<p className='mt-2'>–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è</p>
							<p className='text-sm text-gray-400 leading-3 mt-1'>
								–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏–ª–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º.
							</p>
							<FormInput name='fullName' className='mt-2' />
							<p className='mt-4'>–û —Å–µ–±–µ</p>
							<p className='text-sm text-gray-400 leading-3 mt-1'>
								–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–∏—Ä—É –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ
							</p>
							<FormTextarea
								name='bio'
								placeholder='–Ø –±—ã –º–Ω–æ–≥–æ –≤–∞–º –æ —Å–µ–±–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª, –ø—Ä–æ—Å—Ç–æ –Ω–µ —Ö–æ—á—É...'
								className='mt-2'
								sideButton={false}
							/>
						</div>
						<div className='w-1/2'>
							<p className='mt-2'>–¢–∞–±–ª–∏—Ü–∞ –¥–µ—Ç–∞–ª–µ–π</p>
							<p className='text-sm text-gray-400 leading-3 mt-1'>
								–í–∞—à–∞ –¥–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –≤–æ–∑—Ä–∞—Å—Ç - –≤—Å–µ, —á—Ç–æ —É–≥–æ–¥–Ω–æ.
							</p>
							<SettingsPageProfileCustomFieldsItem
								userId={data.id}
								profile={profile}
								onCustomFieldChange={updateCustomField}
								loading={loading}
							/>
						</div>
					</div>
					<Button
						disabled={formState.isSubmitting}
						className='text-base mt-6 w-full'
						variant='blue'
						type='submit'
					>
						–°–æ—Ö—Ä–∞–Ω–∏—Ç—å
					</Button>
				</form>
			</FormProvider>
		</Container>
	)
}
