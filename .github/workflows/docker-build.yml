name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_SERVER_URL: ${{ secrets.NEXT_PUBLIC_SERVER_URL }}
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
      DATABASE_URI: ${{ secrets.DATABASE_URI }}
      PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_REGION: ${{ secrets.S3_REGION }}
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      NEXT_PUBLIC_YANDEX_METRIKA: ${{ secrets.NEXT_PUBLIC_YANDEX_METRIKA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y sed coreutils

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@10.8.0

      - name: Verify pnpm installation
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-nextjs-

      - name: Build Next.js app
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-nextjs-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL }}
            NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
            DATABASE_URI=${{ secrets.DATABASE_URI }}
            PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}
            CRON_SECRET=${{ secrets.CRON_SECRET }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            S3_REGION=${{ secrets.S3_REGION }}
            S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}
            S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            NEXT_PUBLIC_YANDEX_METRIKA=${{ secrets.NEXT_PUBLIC_YANDEX_METRIKA }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/stormic:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/stormic:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache